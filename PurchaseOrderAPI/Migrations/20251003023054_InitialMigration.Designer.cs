// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PurchaseOrderAPI.Data;

#nullable disable

namespace PurchaseOrderAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251003023054_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PurchaseOrderAPI.Models.OrdenCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cliente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("OrdenesCompra", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cliente = "TechSolutions S.A.",
                            FechaCreacion = new DateTime(2025, 10, 1, 10, 30, 0, 0, DateTimeKind.Utc),
                            Total = 16700.00m
                        },
                        new
                        {
                            Id = 2,
                            Cliente = "Oficinas Corporativas Voultech",
                            FechaCreacion = new DateTime(2025, 10, 2, 14, 15, 0, 0, DateTimeKind.Utc),
                            Total = 16000.00m
                        });
                });

            modelBuilder.Entity("PurchaseOrderAPI.Models.OrdenProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrdenId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrdenId");

                    b.HasIndex("ProductoId");

                    b.ToTable("OrdenProductos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrdenId = 1,
                            ProductoId = 1
                        },
                        new
                        {
                            Id = 2,
                            OrdenId = 1,
                            ProductoId = 2
                        },
                        new
                        {
                            Id = 3,
                            OrdenId = 1,
                            ProductoId = 3
                        },
                        new
                        {
                            Id = 4,
                            OrdenId = 2,
                            ProductoId = 4
                        },
                        new
                        {
                            Id = 5,
                            OrdenId = 2,
                            ProductoId = 5
                        },
                        new
                        {
                            Id = 6,
                            OrdenId = 2,
                            ProductoId = 6
                        });
                });

            modelBuilder.Entity("PurchaseOrderAPI.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Productos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Laptop HP Pavilion",
                            Precio = 15000.00m
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Mouse Logitech",
                            Precio = 500.00m
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Teclado Mecánico",
                            Precio = 1200.00m
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Monitor 24 pulgadas",
                            Precio = 4500.00m
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Impresora Multifuncional",
                            Precio = 8000.00m
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Silla Ergonómica",
                            Precio = 3500.00m
                        });
                });

            modelBuilder.Entity("PurchaseOrderAPI.Models.OrdenProducto", b =>
                {
                    b.HasOne("PurchaseOrderAPI.Models.OrdenCompra", "OrdenCompra")
                        .WithMany("OrdenProductos")
                        .HasForeignKey("OrdenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PurchaseOrderAPI.Models.Producto", "Producto")
                        .WithMany("OrdenProductos")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OrdenCompra");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("PurchaseOrderAPI.Models.OrdenCompra", b =>
                {
                    b.Navigation("OrdenProductos");
                });

            modelBuilder.Entity("PurchaseOrderAPI.Models.Producto", b =>
                {
                    b.Navigation("OrdenProductos");
                });
#pragma warning restore 612, 618
        }
    }
}
